package com.example.userschool.query;import android.content.Context;import android.content.Intent;import android.os.AsyncTask;import com.example.userschool.connectdb.ConnectDB;import com.example.userschool.model.ClassSchool;import java.sql.Connection;import java.sql.ResultSet;import java.sql.ResultSetMetaData;import java.sql.Statement;import java.util.ArrayList;import java.util.List;public class ClassQuery {    private Context context;    private List<ClassSchool> classSchools = new ArrayList<>();    public ClassQuery(Context context) {        this.context = context;    }    ///region Class    public void setClasses(List<ClassSchool> classSchools) {        this.classSchools = classSchools;    }    public List<ClassSchool> getClasses() {        return classSchools;    }    public void callTaskGetClass() {        new TaskGetClass().execute( "" );    }    //endregion    //for get All Class    private class TaskGetClass extends AsyncTask<String, String, List<ClassSchool>> {        String state = "";        boolean isSuccess = false;        private List<ClassSchool> classSchools = new ArrayList<>();        @Override        protected List<ClassSchool> doInBackground(String... strings) {            try {                ConnectDB connectDB = new ConnectDB();                Connection connection = connectDB.CONN();                if (connection == null) {                } else {                    String query = "SELECT class.id ,class.name ,COUNT(student.id) \n" +                            "from class ,student\n" +                            "WHERE (student.classID=class.id)" +                            "Group By class.id";                    Statement stmt = connection.createStatement();                    ResultSet resultSet = stmt.executeQuery( query );                    ResultSetMetaData resultSetMetaData = resultSet.getMetaData();                    while (resultSet.next()) {                        classSchools.add( new ClassSchool( resultSet.getInt( 1 ), resultSet.getString( 2 ),                                resultSet.getInt( 3 ) ) );                    }                    isSuccess = true;                }            } catch (Exception ex) {                isSuccess = false;                state = "Exceptions" + ex;            }            return classSchools;        }        @Override        protected void onPostExecute(List<ClassSchool> classSchools) {            Intent intent = new Intent( "classList" );            context.sendBroadcast( intent );            if (isSuccess) {                setClasses( classSchools );            }        }    }}