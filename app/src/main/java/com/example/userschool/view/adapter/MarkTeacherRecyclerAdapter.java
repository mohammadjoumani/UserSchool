package com.example.userschool.view.adapter;import android.content.Context;import android.text.Editable;import android.text.TextWatcher;import android.util.Log;import android.view.KeyEvent;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.example.userschool.R;import com.example.userschool.listener.MarksListner;import com.example.userschool.model.Student;import com.example.userschool.model.StudentMark;import com.example.userschool.view.adapter.viewholder.MarkTeacherViewHolder;import java.util.List;public class MarkTeacherRecyclerAdapter extends RecyclerView.Adapter<MarkTeacherViewHolder> {    private Context context;    private List<Student> students;    private List<StudentMark> studentMarks;    private MarksListner marksListner;    public MarkTeacherRecyclerAdapter(Context context, List<Student> students, List<StudentMark> studentMarks, MarksListner marksListner) {        this.context = context;        this.students = students;        this.studentMarks = studentMarks;        this.marksListner = marksListner;    }    @NonNull    @Override    public MarkTeacherViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from( context ).inflate( R.layout.item_table_marks_teacher, parent, false );        return new MarkTeacherViewHolder( view );    }    @Override    public void onBindViewHolder(@NonNull MarkTeacherViewHolder holder, int position) {        holder.getTxtrecyclerFragmentMarksTeacherStudent().setText( students.get( holder.getAdapterPosition() ).getName() );        holder.getEdtrecyclerFragmentMarksTeacherPractical().addTextChangedListener( new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if (charSequence.toString().equals( "" )){                    studentMarks.get( holder.getAdapterPosition() )                            .setPractical( 0 );                    marksListner.onMarksChange( studentMarks );                }else {                    studentMarks.get( holder.getAdapterPosition() )                            .setPractical( Integer.parseInt( charSequence.toString() ) );                    marksListner.onMarksChange( studentMarks );                }            }            @Override            public void afterTextChanged(Editable editable) {            }        } );        holder.getEdtrecyclerFragmentMarksTeacherThearitical().addTextChangedListener( new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if (charSequence.toString().equals( "" )){                    studentMarks.get( holder.getAdapterPosition() )                            .setThearitical(0);                    marksListner.onMarksChange( studentMarks );                }else {                    studentMarks.get( holder.getAdapterPosition() )                            .setThearitical( Integer.parseInt( charSequence.toString() ) );                    marksListner.onMarksChange( studentMarks );                }            }            @Override            public void afterTextChanged(Editable editable) {            }        } );    }    @Override    public int getItemCount() {        return students.size();    }    public void setData(List<Student> students) {        this.students = students;        notifyDataSetChanged();    }}